
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.main.allow-bean-definition-overriding=true
spring.datasource.url=jdbc:mysql://localhost:3306/LibraryDB?useSSL=false
spring.datasource.username=root
spring.datasource.password=@dmin

# Hibernate

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE


#Oauth2
security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid



#spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.host = smtp.gmail.com
spring.mail.username = restaurantcrmsystem@gmail.com
spring.mail.password = crm@1994
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
support.email=restaurantcrmsystem@gmail.com

#Redis
spring.redis.host= redis-12005.c81.us-east-1-2.ec2.cloud.redislabs.com
spring.redis.port= 12005
spring.redis.password= jmx3peArcl2ivzdV52gFUbTTftvx2I0g